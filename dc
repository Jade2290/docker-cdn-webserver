#!/usr/bin/env bash

if [ "$1" == "start" ]; then
    sudo docker-compose start
fi

if [ "$1" == "stop" ]; then
    sudo docker-compose stop
fi

if [ "$1" == "update" ]; then    
    sudo docker-compose pull && sudo docker-compose up -d && sudo docker image prune -f
fi

if [ "$1" == "setup" ]; then
  echo 'Setting system...' \
  && read -p "Enter your origin domain (ex:mydomain.com) : " DOMAIN
  read -p "Enter your CDN domain (ex:cdn.mydomain.com) : " CDN_DOMAIN
  read -p "Enter your email address for SSL certificate (ex:myemail@email.com) : " EMAIL \
  && cd /home; git clone https://github.com/woosungchoi/docker-gnuboard-cdn \
  && cd docker-gnuboard-cdn; git clone https://github.com/woosungchoi/my-image-cdn \
  && mv my-image-cdn/www . \
  && rm -rf my-image-cdn \
  && chown -R 82 www \
  && sed -i "s/<cdn_host>/$CDN_DOMAIN/g" nginx/conf.d/gnuboard-cdn.conf \
  && sed -i "s/<cdn_host>/$CDN_DOMAIN/g" nginx/conf.d/ssl-conf \
  && sed -i "s/<cdn_host>/$CDN_DOMAIN/g" docker-compose.yml \
  && sed -i "s/<cdn_host>/$CDN_DOMAIN/g" docker-compose-production.yml \
  && sed -i "s/<origin_host>/$DOMAIN/g" www/config.php \
  && sed -i "s/<origin_host>/$DOMAIN/g" gnuboard-cdn.conf \
  && sed -i "s/<email>/$EMAIL/g" docker-compose.yml \
  && echo 'Setting timezone to Asia/Seoul...' \
  && sudo timedatectl set-timezone Asia/Seoul \
  && echo 'Installing Docker...' \
  && sudo apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common -y \
  && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - \
  && sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" -y \
  && sudo apt update -y \
  && sudo apt install docker-ce docker-ce-cli containerd.io -y \
  && if [ ! -f /usr/local/bin/docker-compose ] ; then
        echo 'Installing Docker Compose...' \
        && COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep 'tag_name' | cut -d\" -f4) \
        && sudo curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose \
        && sudo chmod +x /usr/local/bin/docker-compose
        else echo 'Skip Installing Docker Compose'
     fi
  echo 'Installing SSL...' \
  && sudo docker-compose up \
  && echo 'Preparing docker-compose up' \
  && sudo docker-compose down -v \
  && sudo mkdir -p /usr/share/nginx/html;
  curl -sSLo nginx/conf.d/options-ssl-nginx https://raw.githubusercontent.com/certbot/certbot/master/certbot-nginx/certbot_nginx/_internal/tls_configs/options-ssl-nginx.conf \
  && sudo chmod a+x build/docker-entrypoint.sh \
  && sudo chmod a+x dc \
  && sudo chmod a+x docker-upgrade_ubuntu.sh \
  && mv docker-compose.yml docker-compose.ssl.yml \
  && mv docker-compose.production.yml docker-compose.yml \
  && echo 'Configuring cron...' \
  && echo "0 3 * * * docker start certbot && docker exec nginx nginx -s reload >> /var/log/docker_cron.log 2>&1" >> mycron \
  && sudo crontab mycron; rm mycron \
  && echo "0 2 * * * /home/docker-gnuboard-cdn/docker-upgrade_ubuntu.sh >> /var/log/docker_upgrade.log 2>&1" >> dockerupgradecron \
  && sudo crontab dockerupgradecron; rm dockerupgradecron \
  && echo "#10 4 * * * /usr/bin/find /home/docker-gnuboard-cdn/www -mindepth 2 -atime +10 -type f \( -iname \*.png -o -iname \*.jpg -o -iname \*.jpeg -o -iname \*.mp4 -o -iname \*.webm -o -iname \*.gif \) | xargs rm 1>/dev/null 2>/dev/null" >> cdncron \
  && sudo crontab cdncron; rm cdncron \
  && echo 'Starting Docker ...' \
  && sudo docker-compose up -d  \
  && echo 'Done! ðŸŽ‰' \
  && echo 'by Lael and Woosung Choi' \
  && echo 'Below is a list of containers.'\
  && sudo docker-compose ps \
fi
